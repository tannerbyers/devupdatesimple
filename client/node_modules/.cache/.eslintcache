[{"/Users/tbyers/fun/devupdatesimple/client/src/index.js":"1","/Users/tbyers/fun/devupdatesimple/client/src/App.js":"2","/Users/tbyers/fun/devupdatesimple/client/src/reportWebVitals.js":"3","/Users/tbyers/fun/devupdatesimple/client/src/components/ResponsiveAppBar.js":"4","/Users/tbyers/fun/devupdatesimple/client/src/components/TwitterFeed.js":"5","/Users/tbyers/fun/devupdatesimple/client/src/components/RSSFeed.js":"6","/Users/tbyers/fun/devupdatesimple/client/src/components/ShowStories.js":"7","/Users/tbyers/fun/devupdatesimple/client/src/hooks/dataFetcher.js":"8","/Users/tbyers/fun/devupdatesimple/client/src/utils/apis.js":"9","/Users/tbyers/fun/devupdatesimple/client/src/utils/constants.js":"10","/Users/tbyers/fun/devupdatesimple/client/src/components/Story.js":"11"},{"size":500,"mtime":1643844931093,"results":"12","hashOfConfig":"13"},{"size":1220,"mtime":1643862732264,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1643844931093,"results":"15","hashOfConfig":"13"},{"size":4362,"mtime":1643847226763,"results":"16","hashOfConfig":"13"},{"size":2561,"mtime":1643862732264,"results":"17","hashOfConfig":"13"},{"size":1570,"mtime":1643862732264,"results":"18","hashOfConfig":"13"},{"size":464,"mtime":1643861927706,"results":"19","hashOfConfig":"13"},{"size":530,"mtime":1643861633141,"results":"20","hashOfConfig":"13"},{"size":611,"mtime":1643861629246,"results":"21","hashOfConfig":"13"},{"size":69,"mtime":1643861563130,"results":"22","hashOfConfig":"13"},{"size":939,"mtime":1643861687545,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7jtvlo",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/Users/tbyers/fun/devupdatesimple/client/src/index.js",[],[],"/Users/tbyers/fun/devupdatesimple/client/src/App.js",["62","63"],[],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport ResponsiveAppBar from \"./components/ResponsiveAppBar.js\";\nimport TwitterFeed from \"./components/TwitterFeed.js\";\nimport RSSFeed from \"./components/RSSFeed.js\";\nimport ShowStories from \"./components/ShowStories.js\"\n\nfunction App() {\n  // fetching the GET route from the Express server which matches the GET route from server.js\n  const callBackendAPI = async () => {\n    const response = await fetch(\"/api/twitter_id\");\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message);\n    }\n    console.log(body);\n  };\n\n  return (\n    <div className=\"App\">\n      <ResponsiveAppBar />\n      <div className=\"Content\">\n        <div className=\"Left\">\n          <div className=\"HNContainer\">\n          <p>Hacker News Content</p>\n          <ShowStories />\n          </div>\n        </div>\n        <div className=\"Right\">\n          <div className=\"TwitterContainer\">\n            <p>Twitter Feed</p>\n            <TwitterFeed />\n          </div>\n          <div className=\"NewsContainer\">\n            <p>Specific News</p>\n            <RSSFeed />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/tbyers/fun/devupdatesimple/client/src/reportWebVitals.js",[],[],"/Users/tbyers/fun/devupdatesimple/client/src/components/ResponsiveAppBar.js",[],[],"/Users/tbyers/fun/devupdatesimple/client/src/components/TwitterFeed.js",["64","65","66"],[],"import React, { useEffect, useState } from \"react\";\nimport { useTheme } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\n\nconst getUserTweets = async () => {\n  const response = await fetch(\"/api/recent_twitter_posts\");\n  const body = await response.json();\n\n  if (response.status !== 200) {\n    throw Error(body.message);\n  }\n  return body;\n};\n\nconst getMediaUrl = (tweetMediaGiven, attachments) => {\n  for (let i = 0; i < tweetMediaGiven.length; i++) {\n    if (tweetMediaGiven[i].media_key == attachments.media_keys[0]) {\n      console.log(\"image found\");\n      console.log(tweetMediaGiven[i]);\n      console.log(tweetMediaGiven[i].preview_image_url);\n\n      return tweetMediaGiven[i].preview_image_url || tweetMediaGiven[i].url;\n    }\n  }\n};\n\nconst TwitterFeed = () => {\n  const [tweets, setTweets] = useState([]);\n  const [tweetMedia, setTweetMedia] = useState([]);\n  const theme = useTheme();\n\n  useEffect(async () => {\n    const tweetResponse = await getUserTweets();\n    console.log(tweetResponse.includes.media);\n\n    setTweets(tweetResponse.data);\n    setTweetMedia(tweetResponse.includes.media);\n  }, []);\n\n  return (\n    <>\n      {tweets &&\n        tweets.map((tweet) => (\n          <Card sx={{ display: \"flex\" }}>\n            <Box\n              sx={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                paddingRight: \"2%\",\n              }}\n            >\n              <CardContent sx={{ flex: \"1 0 auto\" }}>\n                <Typography component=\"div\" variant=\"p\">\n                  {tweet.text}\n                </Typography>\n                <Typography\n                  variant=\"subtitle1\"\n                  color=\"text.secondary\"\n                  component=\"div\"\n                >\n                  {tweet.id}\n                </Typography>\n              </CardContent>\n            </Box>\n            {tweet.attachments && (\n              <Button\n                onClick={(event) => {\n                  console.log(event);\n                }}\n              >\n                <CardMedia\n                  component=\"img\"\n                  sx={{ width: 151 }}\n                  src={getMediaUrl(tweetMedia, tweet.attachments)}\n                />\n              </Button>\n            )}\n          </Card>\n        ))}\n    </>\n  );\n};\n\nexport default TwitterFeed;\n","/Users/tbyers/fun/devupdatesimple/client/src/components/RSSFeed.js",["67","68","69","70"],[],"import React, { useEffect, useState } from \"react\";\nimport { useTheme } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\n\nconst getRSSFeed = async () => {\n  const response = await fetch(\"/api/rss_feed\");\n  const body = await response.json();\n\n  if (response.status !== 200) {\n    throw Error(body.message);\n  }\n  return body;\n};\n\nconst RSSFeed = () => {\n  const [RSS, setRSS] = useState([]);\n  const theme = useTheme();\n\n  useEffect(async () => {\n    const response = await getRSSFeed();\n    console.log({ response });\n    setRSS(response);\n  }, []);\n\n  return (\n    <div>\n      {RSS.map((article) => (\n        <div>\n          <CardContent>\n            <Typography variant=\"h5\" component=\"div\">\n              {article.title}\n            </Typography>\n            <Typography variant=\"body2\">\n              <span>\n                <span\n                  dangerouslySetInnerHTML={{\n                    __html: article.content.slice(0, 400),\n                  }}\n                />\n                <b>...</b>\n              </span>\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Button target=\"_blank\" href={article.link} size=\"small\">\n              Learn More\n            </Button>\n          </CardActions>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default RSSFeed;\n","/Users/tbyers/fun/devupdatesimple/client/src/components/ShowStories.js",["71"],[],"import React from 'react';\nimport Story from './Story';\nimport useDataFetcher from '../hooks/dataFetcher';\n\nconst ShowStories = ({ type }) => {\n  const { isLoading, stories } = useDataFetcher(type ? type : 'top');\n\n  return (\n    <React.Fragment>\n      <React.Fragment>\n        {stories.map(\n          ({ data: story }) => story && <Story key={story.id} story={story} />\n        )}\n      </React.Fragment>\n    </React.Fragment>\n  );\n};\n\nexport default ShowStories;","/Users/tbyers/fun/devupdatesimple/client/src/hooks/dataFetcher.js",[],[],["72","73"],"/Users/tbyers/fun/devupdatesimple/client/src/utils/apis.js",[],[],"/Users/tbyers/fun/devupdatesimple/client/src/utils/constants.js",[],[],"/Users/tbyers/fun/devupdatesimple/client/src/components/Story.js",[],[],{"ruleId":"74","severity":1,"message":"75","line":1,"column":8,"nodeType":"76","messageId":"77","endLine":1,"endColumn":12},{"ruleId":"74","severity":1,"message":"78","line":10,"column":9,"nodeType":"76","messageId":"77","endLine":10,"endColumn":23},{"ruleId":"79","severity":1,"message":"80","line":22,"column":38,"nodeType":"81","messageId":"82","endLine":22,"endColumn":40},{"ruleId":"74","severity":1,"message":"83","line":35,"column":9,"nodeType":"76","messageId":"77","endLine":35,"endColumn":14},{"ruleId":"84","severity":1,"message":"85","line":37,"column":13,"nodeType":"86","endLine":43,"endColumn":4},{"ruleId":"74","severity":1,"message":"87","line":3,"column":8,"nodeType":"76","messageId":"77","endLine":3,"endColumn":11},{"ruleId":"74","severity":1,"message":"88","line":4,"column":8,"nodeType":"76","messageId":"77","endLine":4,"endColumn":12},{"ruleId":"74","severity":1,"message":"83","line":22,"column":9,"nodeType":"76","messageId":"77","endLine":22,"endColumn":14},{"ruleId":"84","severity":1,"message":"85","line":24,"column":13,"nodeType":"86","endLine":28,"endColumn":4},{"ruleId":"74","severity":1,"message":"89","line":6,"column":11,"nodeType":"76","messageId":"77","endLine":6,"endColumn":20},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'callBackendAPI' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'theme' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'Box' is defined but never used.","'Card' is defined but never used.","'isLoading' is assigned a value but never used.","no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-global-assign","no-unsafe-negation"]