[{"/Users/tbyers/fun/devupdatesimple/client/src/index.js":"1","/Users/tbyers/fun/devupdatesimple/client/src/App.js":"2","/Users/tbyers/fun/devupdatesimple/client/src/reportWebVitals.js":"3","/Users/tbyers/fun/devupdatesimple/client/src/components/ResponsiveAppBar.js":"4","/Users/tbyers/fun/devupdatesimple/client/src/components/TwitterFeed.js":"5","/Users/tbyers/fun/devupdatesimple/client/src/components/RSSFeed.js":"6","/Users/tbyers/fun/devupdatesimple/client/src/components/ShowStories.js":"7","/Users/tbyers/fun/devupdatesimple/client/src/hooks/dataFetcher.js":"8","/Users/tbyers/fun/devupdatesimple/client/src/utils/apis.js":"9","/Users/tbyers/fun/devupdatesimple/client/src/utils/constants.js":"10","/Users/tbyers/fun/devupdatesimple/client/src/components/Story.js":"11","/Users/tbyers/fun/devupdatesimple/client/src/utils/utils.js":"12"},{"size":500,"mtime":1643844931093,"results":"13","hashOfConfig":"14"},{"size":2851,"mtime":1644348582350,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1643844931093,"results":"16","hashOfConfig":"14"},{"size":4362,"mtime":1643940559015,"results":"17","hashOfConfig":"14"},{"size":4404,"mtime":1644355736273,"results":"18","hashOfConfig":"14"},{"size":2659,"mtime":1644348581534,"results":"19","hashOfConfig":"14"},{"size":426,"mtime":1644291561908,"results":"20","hashOfConfig":"14"},{"size":530,"mtime":1643861633141,"results":"21","hashOfConfig":"14"},{"size":1418,"mtime":1644351239890,"results":"22","hashOfConfig":"14"},{"size":69,"mtime":1643861563130,"results":"23","hashOfConfig":"14"},{"size":1754,"mtime":1644291561909,"results":"24","hashOfConfig":"14"},{"size":724,"mtime":1644291561910,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"7jtvlo",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":1,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"/Users/tbyers/fun/devupdatesimple/client/src/index.js",[],[],["69","70"],"/Users/tbyers/fun/devupdatesimple/client/src/App.js",["71","72"],[],"import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport ResponsiveAppBar from \"./components/ResponsiveAppBar.js\";\nimport TwitterFeed from \"./components/TwitterFeed.js\";\nimport RSSFeed from \"./components/RSSFeed.js\";\nimport ShowStories from \"./components/ShowStories.js\";\nimport Button from \"@mui/material/Button\";\nimport React, { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [layout, setLayout] = useState(\"default\");\n\n  const setLayoutPermanent = (layout) => {\n    // setter\n    localStorage.setItem(\"layout\", layout);\n    setLayout(layout);\n  };\n\n  useEffect(() => {\n    const loadedLayout = localStorage.getItem(\"layout\");\n    if (loadedLayout) {\n      setLayout(loadedLayout);\n    }\n  }, []);\n  return (\n    <div className=\"App\">\n      <ResponsiveAppBar />\n      <Button onClick={() => setLayoutPermanent(\"default\")} variant=\"outlined\">\n        Default\n      </Button>\n      <Button onClick={() => setLayoutPermanent(\"minimal\")} variant=\"outlined\">\n        Minimal\n      </Button>\n      <div className=\"Content\">\n        {layout == \"default\" ? (\n          <>\n            <div className=\"Left\">\n              <div className=\"HNContainer\">\n                <h3\n                  style={{\n                    width: \"80%\",\n                    margin: \"10px auto\",\n                    padding: \"10px\",\n                    textAlign: \"left\",\n                  }}\n                >\n                  Daily HN Content\n                </h3>\n                <ShowStories layout={layout} />\n              </div>\n            </div>\n            <div className=\"Right\">\n              <div className=\"NewsContainer\">\n                <h3\n                  style={{\n                    width: \"80%\",\n                    margin: \"10px auto\",\n                    padding: \"10px\",\n                    textAlign: \"left\",\n                  }}\n                >\n                  Your News\n                </h3>\n\n                <RSSFeed layout={layout} />\n              </div>\n              <div className=\"TwitterContainer\">\n                <h3\n                  style={{\n                    width: \"80%\",\n                    margin: \"10px auto\",\n                    padding: \"10px\",\n                    textAlign: \"left\",\n                  }}\n                >\n                  Recent Tweets\n                </h3>\n                <TwitterFeed layout={layout} />\n              </div>\n            </div>\n          </>\n        ) : (\n          <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n            <div>\n              <ShowStories layout={layout} />\n            </div>\n            <div>\n              <TwitterFeed layout={layout} />\n            </div>\n            <div style={{ width: \"30vw\" }}>\n              <RSSFeed layout={layout} />\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n",["73","74"],"/Users/tbyers/fun/devupdatesimple/client/src/reportWebVitals.js",[],[],"/Users/tbyers/fun/devupdatesimple/client/src/components/ResponsiveAppBar.js",[],[],"/Users/tbyers/fun/devupdatesimple/client/src/components/TwitterFeed.js",["75","76","77","78","79"],[],"import React, { useEffect, useState } from \"react\";\nimport { useTheme } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport {\n  getMediaUrl,\n  getUserTweets,\n  getTwitterUserData,\n} from \"../utils/apis.js\";\n\nconst TwitterFeed = ({ layout }) => {\n  const [tweets, setTweets] = useState([]);\n  const [tweetMedia, setTweetMedia] = useState([]);\n  const [twitterUsersData, setTwitterUserData] = useState([]);\n  const theme = useTheme();\n\n  useEffect(async () => {\n    const tweetResponse = await getUserTweets();\n    const twitterUser = await getTwitterUserData();\n    setTwitterUserData(twitterUser.data);\n    setTweets(tweetResponse.data);\n    setTweetMedia(tweetResponse.includes.media);\n  }, []);\n\n  const getUserData = (tweet, field) => {\n    const specificUser = twitterUsersData.filter(\n      (user) => user.id == tweet.author_id\n    );\n    console.log(specificUser[0][field]);\n    return specificUser[0][field];\n  };\n\n  const removeTwitterImageLink = (text) => {\n    // IDK why but twitter adds a custom url for the image in a tweet. I am using the attachments to get the link. I decided to just remove the link.\n    // I might want to just iterate over the string and if I find a t.co link, make it an image src or something idk.\n    const stringArray = text.split(\" \");\n    const result = stringArray.filter((word) => word.indexOf(\"t.co\") === -1);\n\n    return result.join(\" \");\n  };\n\n  return (\n    <div\n      style={{\n        width: \"80%\",\n        margin: \"10px auto\",\n        padding: \"10px\",\n        textAlign: \"left\",\n      }}\n    >\n      {layout == \"default\"\n        ? tweets.map((tweet) => (\n            <Card\n              sx={{\n                display: \"flex\",\n                margin: \"1%\",\n                padding: \"5%\",\n              }}\n            >\n              <div style={{ paddingRight: \"5%\" }}>\n                <img src={getUserData(tweet, \"profile_image_url\")} />\n              </div>\n              <div>\n                <div\n                  style={{\n                    display: \"flex\",\n                    color: \"black\",\n                    minWidth: \"20vw\",\n                  }}\n                >\n                  <b>{getUserData(tweet, \"name\")}</b>\n                  <p style={{ color: \"grey\", paddingLeft: \"2%\" }}>\n                    @{getUserData(tweet, \"username\")}\n                  </p>\n                </div>\n                <p>{removeTwitterImageLink(tweet.text)}</p>\n                {tweet.attachments && (\n                  <CardMedia\n                    component=\"img\"\n                    sx={{ width: 151 }}\n                    src={getMediaUrl(tweetMedia, tweet.attachments)}\n                  />\n                )}\n              </div>\n            </Card>\n          ))\n        : tweets.map((tweet) => (\n            <Card\n              sx={{\n                display: \"flex\",\n                borderBottomColor: \"rgb(239, 243, 244)\",\n                border: \"solid rgb(239, 243, 244)\",\n                margin: \"1%\",\n              }}\n            >\n              <Box\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  paddingRight: \"2%\",\n                }}\n              >\n                <CardContent sx={{ flex: \"1 0 auto\" }}>\n                  <Typography component=\"div\" variant=\"p\">\n                    {tweet.text}\n                  </Typography>\n                  <Typography\n                    variant=\"subtitle1\"\n                    color=\"text.secondary\"\n                    component=\"div\"\n                  >\n                    {tweet.id}\n                  </Typography>\n                </CardContent>\n              </Box>\n              {tweet.attachments && (\n                <Button\n                  onClick={(event) => {\n                    console.log(event);\n                  }}\n                >\n                  <CardMedia\n                    component=\"img\"\n                    sx={{ width: 151 }}\n                    src={getMediaUrl(tweetMedia, tweet.attachments)}\n                  />\n                </Button>\n              )}\n            </Card>\n          ))}\n    </div>\n  );\n};\n\nexport default TwitterFeed;\n","/Users/tbyers/fun/devupdatesimple/client/src/components/RSSFeed.js",["80","81","82","83","84","85","86","87","88","89"],[],"import React, { useEffect, useState } from \"react\";\nimport { useTheme } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport { timeSince } from \"../utils/utils.js\";\n\nconst getRSSFeed = async () => {\n  const response = await fetch(\"/api/rss_feed\");\n  const body = await response.json();\n  if (response.status !== 200) {\n    throw Error(body.message);\n  }\n  return body;\n};\n\nfunction convertToPlain(html) {\n  // Create a new div element\n  var tempDivElement = document.createElement(\"div\");\n\n  // Set the HTML content with the given value\n  tempDivElement.innerHTML = html;\n\n  // Retrieve the text property of the element\n  return tempDivElement.textContent || tempDivElement.innerText || \"\";\n}\n\nconst RSSFeed = ({ layout }) => {\n  const [RSS, setRSS] = useState([]);\n\n  useEffect(async () => {\n    const response = await getRSSFeed();\n    setRSS(response);\n  }, []);\n\n  return (\n    <div\n      style={{\n        width: \"80%\",\n        margin: \"10px auto\",\n        padding: \"10px\",\n        textAlign: \"left\",\n      }}\n    >\n      {layout == \"default\"\n        ? RSS.sort(function (a, b) {\n            // Sort by most recent Published Date\n            return new Date(b.pubDate) - new Date(a.pubDate);\n          }).map((article) => (\n            <a href={article.link} target=\"_blank\">\n              <Card\n                style={{\n                  maxHeight: \"10vh\",\n                  border: \"solid rgb(239, 243, 244)\",\n                  margin: \"1%\",\n                  paddingLeft: \"5%\",\n                  textAlign: \"left\",\n                }}\n              >\n                <p style={{ float: \"right\", paddingRight: \"5%\" }}>\n                  {timeSince(new Date(article.pubDate))}\n                </p>\n                <h4>{article.title}</h4>\n                {/* <div style={{ fontSize: \".9rem\" }}>\n                  {convertToPlain(article.content).slice(0, 180) + \"...\"}\n                </div> */}\n              </Card>\n            </a>\n          ))\n        : RSS.map((article) => (\n            <div\n              style={{\n                margin: \"3%\",\n                textAlign: \"left\",\n                borderBottom: \"solid .5 #828282\",\n              }}\n            >\n              <a href={article.link}>\n                <tr>{article.title}</tr>\n                <tr>{article.link.split(\"/\")[2]}</tr>\n              </a>\n            </div>\n          ))}\n    </div>\n  );\n};\n\nexport default RSSFeed;\n","/Users/tbyers/fun/devupdatesimple/client/src/components/ShowStories.js",["90"],[],"import React from 'react';\nimport Story from './Story';\nimport useDataFetcher from '../hooks/dataFetcher';\n\nconst ShowStories = ({ type, layout }) => {\n  const { isLoading, stories } = useDataFetcher(type ? type : 'best');\n\n  return (\n    <React.Fragment>\n        {stories.map(\n          ({ data: story }) => story && <Story key={story.id} story={story} />\n        )}\n    </React.Fragment>\n  );\n};\n\nexport default ShowStories;","/Users/tbyers/fun/devupdatesimple/client/src/hooks/dataFetcher.js",[],[],"/Users/tbyers/fun/devupdatesimple/client/src/utils/apis.js",["91"],[],"/Users/tbyers/fun/devupdatesimple/client/src/utils/constants.js",[],[],"/Users/tbyers/fun/devupdatesimple/client/src/components/Story.js",["92"],[],"import React from \"react\";\nimport { timeSince } from \"../utils/utils\";\n\nconst Link = ({ url, title, bold }) => {\n  return (\n    <>\n      {bold ? (\n        <b>\n          <a href={url} target=\"_blank\" rel=\"noreferrer\">\n            {title}\n          </a>\n        </b>\n      ) : (\n        <a\n          style={{ color: \"grey\" }}\n          href={url}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          {title}\n        </a>\n      )}\n    </>\n  );\n};\nconst Story = ({ story: { id, by, title, kids, time, url, score } }) => {\n  return (\n    <div className=\"story\">\n      <div\n        style={{\n          marginRight: \"1rem\",\n          padding: \".3rem\",\n          border: \"solid\",\n          borderRadius: \"10px\",\n          width: \"2.5rem\",\n          height: \"2.5rem\",\n          textAlign: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        {score}\n      </div>\n      <div>\n        <div className=\"story-title\">\n          <Link bold url={url} title={title} />\n          <Link\n            url={url}\n            title={\" (\" + (url?.split(\"/\")[2] || \"hackernews.com\") + \")\"}\n          />\n          <span>\n            <a href=\"#\">...</a>\n          </span>\n        </div>\n        <div className=\"story-info\">\n          <span>\n            by{\" \"}\n            <Link\n              url={`https://news.ycombinator.com/user?id=${by}`}\n              title={by}\n            />\n          </span>\n          |<span>{timeSince(new Date(time * 1000))}</span>|\n          <span>\n            <Link\n              url={`https://news.ycombinator.com/item?id=${id}`}\n              title={`${kids && kids.length > 0 ? kids.length : 0} comments`}\n            />\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Story;\n","/Users/tbyers/fun/devupdatesimple/client/src/utils/utils.js",[],[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":1,"column":8,"nodeType":"99","messageId":"100","endLine":1,"endColumn":12},{"ruleId":"101","severity":1,"message":"102","line":35,"column":17,"nodeType":"103","messageId":"104","endLine":35,"endColumn":19},{"ruleId":"93","replacedBy":"105"},{"ruleId":"95","replacedBy":"106"},{"ruleId":"97","severity":1,"message":"107","line":19,"column":9,"nodeType":"99","messageId":"100","endLine":19,"endColumn":14},{"ruleId":"108","severity":1,"message":"109","line":21,"column":13,"nodeType":"110","endLine":27,"endColumn":4},{"ruleId":"101","severity":1,"message":"102","line":31,"column":25,"nodeType":"103","messageId":"104","endLine":31,"endColumn":27},{"ruleId":"101","severity":1,"message":"102","line":55,"column":15,"nodeType":"103","messageId":"104","endLine":55,"endColumn":17},{"ruleId":"111","severity":1,"message":"112","line":65,"column":17,"nodeType":"113","endLine":65,"endColumn":70},{"ruleId":"97","severity":1,"message":"114","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":18},{"ruleId":"97","severity":1,"message":"115","line":3,"column":8,"nodeType":"99","messageId":"100","endLine":3,"endColumn":11},{"ruleId":"97","severity":1,"message":"116","line":5,"column":8,"nodeType":"99","messageId":"100","endLine":5,"endColumn":19},{"ruleId":"97","severity":1,"message":"117","line":6,"column":8,"nodeType":"99","messageId":"100","endLine":6,"endColumn":19},{"ruleId":"97","severity":1,"message":"118","line":7,"column":8,"nodeType":"99","messageId":"100","endLine":7,"endColumn":14},{"ruleId":"97","severity":1,"message":"119","line":8,"column":8,"nodeType":"99","messageId":"100","endLine":8,"endColumn":18},{"ruleId":"97","severity":1,"message":"120","line":20,"column":10,"nodeType":"99","messageId":"100","endLine":20,"endColumn":24},{"ruleId":"108","severity":1,"message":"109","line":34,"column":13,"nodeType":"110","endLine":37,"endColumn":4},{"ruleId":"101","severity":1,"message":"102","line":48,"column":15,"nodeType":"103","messageId":"104","endLine":48,"endColumn":17},{"ruleId":"121","severity":1,"message":"122","line":53,"column":13,"nodeType":"113","messageId":"123","endLine":53,"endColumn":52,"fix":"124"},{"ruleId":"97","severity":1,"message":"125","line":6,"column":11,"nodeType":"99","messageId":"100","endLine":6,"endColumn":20},{"ruleId":"101","severity":1,"message":"102","line":27,"column":38,"nodeType":"103","messageId":"104","endLine":27,"endColumn":40},{"ruleId":"126","severity":1,"message":"127","line":51,"column":13,"nodeType":"113","endLine":51,"endColumn":25},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["128"],["129"],"'theme' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useTheme' is defined but never used.","'Box' is defined but never used.","'CardActions' is defined but never used.","'CardContent' is defined but never used.","'Button' is defined but never used.","'Typography' is defined but never used.","'convertToPlain' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"130","text":"131"},"'isLoading' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",[1537,1537]," rel=\"noreferrer\""]