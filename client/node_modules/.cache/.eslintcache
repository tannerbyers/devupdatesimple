[{"/Users/tbyers/fun/devupdatesimple/client/src/index.js":"1","/Users/tbyers/fun/devupdatesimple/client/src/App.js":"2","/Users/tbyers/fun/devupdatesimple/client/src/reportWebVitals.js":"3","/Users/tbyers/fun/devupdatesimple/client/src/components/ResponsiveAppBar.js":"4","/Users/tbyers/fun/devupdatesimple/client/src/components/TwitterFeed.js":"5","/Users/tbyers/fun/devupdatesimple/client/src/components/RSSFeed.js":"6","/Users/tbyers/fun/devupdatesimple/client/src/components/ShowStories.js":"7","/Users/tbyers/fun/devupdatesimple/client/src/hooks/dataFetcher.js":"8","/Users/tbyers/fun/devupdatesimple/client/src/utils/apis.js":"9","/Users/tbyers/fun/devupdatesimple/client/src/utils/constants.js":"10","/Users/tbyers/fun/devupdatesimple/client/src/components/Story.js":"11","/Users/tbyers/fun/devupdatesimple/client/src/utils/utils.js":"12","/Users/tbyers/fun/devupdatesimple/client/src/pages/Home.js":"13","/Users/tbyers/fun/devupdatesimple/client/src/pages/About.js":"14","/Users/tbyers/fun/devupdatesimple/client/src/pages/HolyGrail.js":"15"},{"size":593,"mtime":1644378953871,"results":"16","hashOfConfig":"17"},{"size":618,"mtime":1644380012510,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1643844931093,"results":"19","hashOfConfig":"17"},{"size":1592,"mtime":1644380383761,"results":"20","hashOfConfig":"17"},{"size":4368,"mtime":1644376701654,"results":"21","hashOfConfig":"17"},{"size":2625,"mtime":1644376690633,"results":"22","hashOfConfig":"17"},{"size":477,"mtime":1644376327040,"results":"23","hashOfConfig":"17"},{"size":530,"mtime":1643861633141,"results":"24","hashOfConfig":"17"},{"size":1418,"mtime":1644351239890,"results":"25","hashOfConfig":"17"},{"size":69,"mtime":1643861563130,"results":"26","hashOfConfig":"17"},{"size":1703,"mtime":1644376695349,"results":"27","hashOfConfig":"17"},{"size":1224,"mtime":1644376693551,"results":"28","hashOfConfig":"17"},{"size":3139,"mtime":1644379108367,"results":"29","hashOfConfig":"17"},{"size":1669,"mtime":1644381770239,"results":"30","hashOfConfig":"17"},{"size":1550,"mtime":1644382194250,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"7jtvlo",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"35"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"54","usedDeprecatedRules":"35"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"35"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"35"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"35"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"35"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"35"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":6,"source":"87"},"/Users/tbyers/fun/devupdatesimple/client/src/index.js",[],[],["88","89"],"/Users/tbyers/fun/devupdatesimple/client/src/App.js",["90","91","92"],[],"import \"./App.css\";\nimport ResponsiveAppBar from \"./components/ResponsiveAppBar.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport Home from \"./pages/Home.js\";\nimport About from \"./pages/About.js\";\nimport HolyGrail from \"./pages/HolyGrail\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ResponsiveAppBar />\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"about\" element={<About />} />\n        <Route path=\"holygrail\" element={<HolyGrail />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/tbyers/fun/devupdatesimple/client/src/reportWebVitals.js",[],[],"/Users/tbyers/fun/devupdatesimple/client/src/components/ResponsiveAppBar.js",["93","94","95"],[],"import * as React from \"react\";\nimport AppBar from \"@mui/material/AppBar\";\nimport Box from \"@mui/material/Box\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { Link } from \"react-router-dom\";\n\nconst pages = [\"Home\", \"About\", \"Holy Grail\"];\n\nconst ResponsiveAppBar = () => {\n  return (\n    <AppBar position=\"static\">\n      <Container maxWidth=\"l\">\n        <Toolbar disableGutters>\n          <Typography\n            style={{ paddingRight: \"1vw\" }}\n            variant=\"h3\"\n            noWrap\n            component=\"div\"\n          >\n            Dev Update\n          </Typography>\n          <div style={{ display: \"flex\", textAlign: \"right\" }}>\n            <Typography variant=\"h6\" noWrap component=\"div\">\n              <Link style={{ paddingRight: \"1vw\", color: \"#fff\" }} to=\"/\">\n                Home\n              </Link>\n            </Typography>\n            <Typography variant=\"h6\" noWrap component=\"div\">\n              <Link style={{ paddingRight: \"1vw\", color: \"#fff\" }} to=\"/about\">\n                About\n              </Link>\n            </Typography>\n\n            <Typography variant=\"h6\" noWrap component=\"div\">\n              <Link\n                style={{ paddingRight: \"1vw\", color: \"#fff\" }}\n                to=\"/holygrail\"\n              >\n                Holy Grail\n              </Link>\n            </Typography>\n          </div>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\nexport default ResponsiveAppBar;\n","/Users/tbyers/fun/devupdatesimple/client/src/components/TwitterFeed.js",["96","97","98","99","100"],[],"import React, { useEffect, useState } from \"react\";\nimport { useTheme } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport {\n  getMediaUrl,\n  getUserTweets,\n  getTwitterUserData,\n} from \"../utils/apis.js\";\n\nconst TwitterFeed = ({ layout }) => {\n  const [tweets, setTweets] = useState([]);\n  const [tweetMedia, setTweetMedia] = useState([]);\n  const [twitterUsersData, setTwitterUserData] = useState([]);\n  const theme = useTheme();\n\n  useEffect(async () => {\n    const tweetResponse = await getUserTweets();\n    const twitterUser = await getTwitterUserData();\n    setTwitterUserData(twitterUser.data);\n    setTweets(tweetResponse.data);\n    setTweetMedia(tweetResponse.includes.media);\n  }, []);\n\n  const getUserData = (tweet, field) => {\n    const specificUser = twitterUsersData.filter(\n      (user) => user.id == tweet.author_id\n    );\n    return specificUser[0][field];\n  };\n\n  const removeTwitterImageLink = (text) => {\n    // IDK why but twitter adds a custom url for the image in a tweet. I am using the attachments to get the link. I decided to just remove the link.\n    // I might want to just iterate over the string and if I find a t.co link, make it an image src or something idk.\n    const stringArray = text.split(\" \");\n    const result = stringArray.filter((word) => word.indexOf(\"t.co\") === -1);\n\n    return result.join(\" \");\n  };\n\n  return (\n    <div\n      style={{\n        width: \"80%\",\n        margin: \"10px auto\",\n        padding: \"10px\",\n        textAlign: \"left\",\n      }}\n    >\n      {layout == \"default\"\n        ? tweets.map((tweet) => (\n            <Card\n              sx={{\n                display: \"flex\",\n                margin: \"1%\",\n                padding: \"5%\",\n                border: \"solid rgb(239, 243, 244)\",\n              }}\n            >\n              <div style={{ paddingRight: \"5%\" }}>\n                <img src={getUserData(tweet, \"profile_image_url\")} />\n              </div>\n              <div>\n                <div\n                  style={{\n                    display: \"flex\",\n                    color: \"black\",\n                    minWidth: \"20vw\",\n                  }}\n                >\n                  <b>{getUserData(tweet, \"name\")}</b>\n                  <p style={{ color: \"grey\", paddingLeft: \"2%\" }}>\n                    @{getUserData(tweet, \"username\")}\n                  </p>\n                </div>\n                <p>{removeTwitterImageLink(tweet.text)}</p>\n                {tweet.attachments && (\n                  <CardMedia\n                    component=\"img\"\n                    sx={{\n                      width: 151,\n                      borderRadius: 5,\n                      margin: \"1rem\",\n                      border: \".1rem solid lightgrey\",\n                    }}\n                    src={getMediaUrl(tweetMedia, tweet.attachments)}\n                  />\n                )}\n              </div>\n            </Card>\n          ))\n        : tweets.map((tweet) => (\n            <Card\n              sx={{\n                display: \"flex\",\n                borderBottomColor: \"rgb(239, 243, 244)\",\n                border: \"solid rgb(239, 243, 244)\",\n                margin: \"1%\",\n              }}\n            >\n              <Box\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  paddingRight: \"2%\",\n                }}\n              >\n                <CardContent sx={{ flex: \"1 0 auto\" }}>\n                  <Typography component=\"div\" variant=\"p\">\n                    {tweet.text}\n                  </Typography>\n                  <Typography\n                    variant=\"subtitle1\"\n                    color=\"text.secondary\"\n                    component=\"div\"\n                  >\n                    {tweet.id}\n                  </Typography>\n                </CardContent>\n              </Box>\n              {tweet.attachments && (\n                <CardMedia\n                  component=\"img\"\n                  sx={{ width: 151 }}\n                  src={getMediaUrl(tweetMedia, tweet.attachments)}\n                />\n              )}\n            </Card>\n          ))}\n    </div>\n  );\n};\n\nexport default TwitterFeed;\n","/Users/tbyers/fun/devupdatesimple/client/src/components/RSSFeed.js",["101","102","103"],[],"import React, { useEffect, useState } from \"react\";\nimport Card from \"@mui/material/Card\";\nimport { timeSinceDate } from \"../utils/utils.js\";\nimport { ReactJs } from \"@icons-pack/react-simple-icons\";\nimport { V8 } from \"@icons-pack/react-simple-icons\";\nconst getRSSFeed = async () => {\n  const response = await fetch(\"/api/rss_feed\");\n  const body = await response.json();\n  if (response.status !== 200) {\n    throw Error(body.message);\n  }\n  return body;\n};\n\nconst GetIconWithURL = ({ url }) => {\n  switch (url) {\n    case \"https://reactjs.org/feed.xml\":\n      return (\n        <div>\n          <ReactJs\n            style={{ paddingRight: \".5rem\" }}\n            color=\"#61DAFB\"\n            size={30}\n          />\n        </div>\n      );\n\n    case \"https://v8.dev/blog.atom\":\n      return (\n        <div>\n          <V8 style={{ paddingRight: \".5rem\" }} color=\"#4B8BF5\" size={30} />\n        </div>\n      );\n\n    default:\n      return <>Default</>;\n  }\n};\n\nconst RSSFeed = ({ layout }) => {\n  const [RSS, setRSS] = useState([]);\n\n  useEffect(async () => {\n    const response = await getRSSFeed();\n    setRSS(response);\n  }, []);\n\n  return (\n    <div\n      style={{\n        width: \"80%\",\n        margin: \"10px auto\",\n        padding: \"10px\",\n        textAlign: \"left\",\n      }}\n    >\n      {layout == \"default\"\n        ? RSS.sort(function (a, b) {\n            // Sort by most recent Published Date\n            return new Date(b.pubDate) - new Date(a.pubDate);\n          }).map((article) => (\n            <a href={article.link} target=\"_blank\">\n              <Card\n                style={{\n                  maxHeight: \"3vh\",\n                  border: \"solid rgb(239, 243, 244)\",\n                  margin: \"1%\",\n                  textAlign: \"left\",\n                  padding: \"2%\",\n                }}\n              >\n                <p style={{ float: \"right\", paddingRight: \"5%\" }}>\n                  {timeSinceDate(new Date(article.pubDate))}\n                </p>\n                <h4 style={{ display: \"flex\" }}>\n                  <GetIconWithURL url={article.baseUrl} />\n                  {article.title}\n                </h4>\n              </Card>\n            </a>\n          ))\n        : RSS.map((article) => (\n            <div\n              style={{\n                margin: \"3%\",\n                textAlign: \"left\",\n                borderBottom: \"solid .5 #828282\",\n              }}\n            >\n              <a href={article.link}>\n                <tr>{article.title}</tr>\n                <tr>{article.link.split(\"/\")[2]}</tr>\n              </a>\n            </div>\n          ))}\n    </div>\n  );\n};\n\nexport default RSSFeed;\n","/Users/tbyers/fun/devupdatesimple/client/src/components/ShowStories.js",[],[],"/Users/tbyers/fun/devupdatesimple/client/src/hooks/dataFetcher.js",[],[],"/Users/tbyers/fun/devupdatesimple/client/src/utils/apis.js",["104"],[],"import axios from 'axios';\nimport { BASE_API_URL } from './constants.js';\n\nconst getStory = async (id) => {\n  try {\n    const story = await axios.get(`${BASE_API_URL}/item/${id}.json`);\n    return story;\n  } catch (error) {\n    console.log('Error while getting a story.');\n  }\n};\n\nexport const getStories = async (type) => {\n  try {\n    const { data: storyIds } = await axios.get(\n      `${BASE_API_URL}/${type}stories.json`\n    );\n    const stories = await Promise.all(storyIds.slice(0, 30).map(getStory));\n    return stories;\n  } catch (error) {\n    console.log('Error while getting list of stories.');\n  }\n};\n\nexport const getMediaUrl = (tweetMediaGiven, attachments) => {\n  for (let i = 0; i < tweetMediaGiven.length; i++) {\n    if (tweetMediaGiven[i].media_key == attachments.media_keys[0]) {\n      if (tweetMediaGiven[i].preview_image_url) {\n        return tweetMediaGiven[i].preview_image_url;\n      }\n      return tweetMediaGiven[i].url;\n    }\n  }\n};\n\n\nexport const getUserTweets = async () => {\n  const response = await fetch(\"/api/recent_twitter_posts\");\n  const body = await response.json();\n\n  if (response.status !== 200) {\n    throw Error(body.message);\n  }\n  return body;\n};\n\n\nexport const getTwitterUserData = async () => {\n  const response = await fetch(\"/api/twitter_user\");\n  const body = await response.json();\n\n  if (response.status !== 200) {\n    throw Error(body.message);\n  }\n  return body;\n};\n","/Users/tbyers/fun/devupdatesimple/client/src/utils/constants.js",[],[],"/Users/tbyers/fun/devupdatesimple/client/src/components/Story.js",["105"],[],"import React from \"react\";\nimport { timeSinceDate } from \"../utils/utils\";\n\nconst Link = ({ url, title, bold }) => {\n  return (\n    <>\n      {bold ? (\n        <b>\n          <a href={url} target=\"_blank\" rel=\"noreferrer\">\n            {title}\n          </a>\n        </b>\n      ) : (\n        <a\n          style={{ color: \"grey\" }}\n          href={url}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          {title}\n        </a>\n      )}\n    </>\n  );\n};\nconst Story = ({ story: { id, by, title, kids, time, url, score } }) => {\n  return (\n    <div className=\"story\">\n      <b\n        style={{\n          display: \"flex\",\n          marginRight: \"1rem\",\n          borderRadius: \"10px\",\n          textAlign: \"center\",\n          justifyContent: \"center\",\n          color: \"#1976d2\",\n        }}\n      >\n        {score}\n      </b>\n      <div>\n        <div className=\"story-title\">\n          <Link bold url={url} title={title} />\n          <Link\n            url={url}\n            title={\" (\" + (url?.split(\"/\")[2] || \"hackernews.com\") + \")\"}\n          />\n          <span>\n            <a href=\"#\">...</a>\n          </span>\n        </div>\n        <div className=\"story-info\">\n          <span>\n            by{\" \"}\n            <Link\n              url={`https://news.ycombinator.com/user?id=${by}`}\n              title={by}\n            />\n          </span>\n          |<span>{timeSinceDate(new Date(time * 1000))}</span>|\n          <span>\n            <Link\n              url={`https://news.ycombinator.com/item?id=${id}`}\n              title={`${kids && kids.length > 0 ? kids.length : 0} comments`}\n            />\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Story;\n","/Users/tbyers/fun/devupdatesimple/client/src/utils/utils.js",["106","107","108","109","110","111"],[],"export const timeSinceDate = (date) => {\n  var seconds = Math.floor((new Date() - date) / 1000);\n\n  var interval = seconds / 31536000;\n\n  if (interval > 1) {\n    if (Math.floor(interval) == 1) {\n      return Math.floor(interval) + \" year ago\";\n    }\n    return Math.floor(interval) + \" years ago\";\n  }\n  interval = seconds / 2592000;\n  if (interval > 1) {\n    if (Math.floor(interval) == 1) {\n      return Math.floor(interval) + \" month ago\";\n    }\n    return Math.floor(interval) + \" months ago\";\n  }\n  interval = seconds / 86400;\n  if (interval > 1) {\n    if (Math.floor(interval) == 1) {\n      return Math.floor(interval) + \" day ago\";\n    }\n    return Math.floor(interval) + \" days ago\";\n  }\n  interval = seconds / 3600;\n  if (interval > 1) {\n    if (Math.floor(interval) == 1) {\n      return Math.floor(interval) + \" hour ago\";\n    }\n    return Math.floor(interval) + \" hours ago\";\n  }\n  interval = seconds / 60;\n  if (interval > 1) {\n    if (Math.floor(interval) == 1) {\n      return Math.floor(interval) + \" minute ago\";\n    }\n    return Math.floor(interval) + \" minutes ago\";\n  }\n  if (Math.floor(seconds) == 1) {\n    return Math.floor(seconds) + \" second ago\";\n  }\n  return Math.floor(seconds) + \" seconds ago\";\n};\n","/Users/tbyers/fun/devupdatesimple/client/src/pages/Home.js",["112","113","114","115"],[],"import \"../App.css\";\nimport ResponsiveAppBar from \"../components/ResponsiveAppBar.js\";\nimport TwitterFeed from \"../components/TwitterFeed.js\";\nimport RSSFeed from \"../components/RSSFeed.js\";\nimport ShowStories from \"../components/ShowStories.js\";\nimport Button from \"@mui/material/Button\";\nimport React, { useState, useEffect } from \"react\";\n\nfunction Home() {\n  const [layout, setLayout] = useState(\"default\");\n  const [HNCategory, setHNCategory] = useState(\"top\");\n\n  const setLayoutPermanent = (layout) => {\n    // setter\n    localStorage.setItem(\"layout\", layout);\n    setLayout(layout);\n  };\n\n  useEffect(() => {\n    const loadedLayout = localStorage.getItem(\"layout\");\n    if (loadedLayout) {\n      setLayout(loadedLayout);\n    }\n  }, []);\n  {\n    /* <Button onClick={() => setLayoutPermanent(\"default\")} variant=\"outlined\">\n        Default\n      </Button>\n      <Button onClick={() => setLayoutPermanent(\"minimal\")} variant=\"outlined\">\n        Minimal\n      </Button> */\n  }\n  return (\n    <div style={{ backgroundColor: \"#1976d2\" }} className=\"Content\">\n      {layout == \"default\" ? (\n        <>\n          <div className=\"Left\">\n            <div className=\"HNContainer\">\n              <h3\n                style={{\n                  width: \"80%\",\n                  margin: \"10px auto\",\n                  padding: \"10px\",\n                  textAlign: \"left\",\n                }}\n              >\n                Daily HN Content\n              </h3>\n              <Button variant=\"outlined\" onClick={() => setHNCategory(\"top\")}>\n                top\n              </Button>\n              <Button variant=\"outlined\" onClick={() => setHNCategory(\"new\")}>\n                latest\n              </Button>\n              <Button variant=\"outlined\" onClick={() => setHNCategory(\"best\")}>\n                best\n              </Button>\n              <ShowStories type={HNCategory} layout={layout} />\n            </div>\n          </div>\n          <div className=\"Right\">\n            <div className=\"NewsContainer\">\n              <h3\n                style={{\n                  width: \"80%\",\n                  margin: \"10px auto\",\n                  padding: \"10px\",\n                  textAlign: \"left\",\n                }}\n              >\n                Your News\n              </h3>\n\n              <RSSFeed layout={layout} />\n            </div>\n            <div className=\"TwitterContainer\">\n              <h3\n                style={{\n                  width: \"80%\",\n                  margin: \"10px auto\",\n                  padding: \"10px\",\n                  textAlign: \"left\",\n                }}\n              >\n                Recent Tweets\n              </h3>\n              <TwitterFeed layout={layout} />\n            </div>\n          </div>\n        </>\n      ) : (\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n          <div>\n            <ShowStories layout={layout} />\n          </div>\n          <div>\n            <TwitterFeed layout={layout} />\n          </div>\n          <div style={{ width: \"30vw\" }}>\n            <RSSFeed layout={layout} />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Home;\n","/Users/tbyers/fun/devupdatesimple/client/src/pages/About.js",["116","117"],[],"import React, { useState, useEffect } from \"react\";\n\nfunction About() {\n  return (\n    <div style={{ backgroundColor: \"#1976d2\" }} className=\"Content\">\n      <div style={{ padding: \"2%\", textAlign: \"left\" }} className=\"Center\">\n        <h2>Why does this website exist?</h2>\n        <p>\n          I wanted a website that keeps frontend developers up to date, so I\n          made one\n        </p>\n        <h2>I found a bug or have a feature request!?</h2>\n        <p>\n          Message me on{\" \"}\n          <a style={{ color: \"blue\" }} href=\"https://twitter.com/TannerByers7\">\n            twitter\n          </a>{\" \"}\n          or shoot me an email at programtanner@gmail.com{\" \"}\n        </p>\n\n        <h2>Why doesn't this work on mobile?</h2>\n        <p>\n          I use this on my pc to get news updates in the morning. I don't think\n          all the content on a small screen would be worth the effort to\n          make this website \"responsive\".\n        </p>\n        <h2>Current beliefs that affect the website?</h2>\n        <p>\n          I try to avoid any news website that has political or adjective heavy\n          titles. This is for my personal sanity and I don't expect most users\n          to feel the same. I will by default not block these types of websites\n          but will provide features for users to block them in the future.\n        </p>\n        <h2>Who are you?</h2>\n        <p>\n          I'm{\" \"}\n          <a style={{ color: \"blue\" }} href=\"https://twitter.com/TannerByers7\">\n            Tanner Byers\n          </a>{\" \"}\n          and coding is something I enjoy being good at.\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default About;\n","/Users/tbyers/fun/devupdatesimple/client/src/pages/HolyGrail.js",["118","119","120","121","122","123","124","125"],[],"import React, { useState, useEffect } from \"react\";\n\nfunction HolyGrail() {\n  return (\n    <div style={{ backgroundColor: \"#1976d2\" }} className=\"Content\">\n      <div className=\"Center\">\n        <h2>My Personal List of ✨AMAZING✨ Articles & Tools</h2>\n        <h2>Articles</h2>\n        <ul style={{ textAlign: \"left\" }}>\n          <li>\n            <a target=\"_blank\" href=\"https://flaviocopes.com/debugging/\">\n              Debugging JavaScript\n            </a>\n          </li>\n          <li>\n            <a\n              target=\"_blank\"\n              href=\"https://hugodaniel.com/posts/using-just-an-index-to-develop-a-web-app/\"\n            >\n              The Zen of index.html\n            </a>\n          </li>\n          <li>\n            <a target=\"_blank\" href=\"https://jvns.ca/\">\n              A Cool Dev Doing Cool Things\n            </a>\n          </li>\n          <li>\n            <a\n              target=\"_blank\"\n              href=\"https://jmmv.dev/2021/04/always-be-quitting.html\"\n            >\n              Always Be Quitting\n            </a>\n          </li>\n          <li>\n            <a target=\"_blank\" href=\"https://blog.jim-nielsen.com/\">\n              A Wise Designer Who Apparently Codes\n            </a>\n          </li>\n        </ul>\n        <h2>Tools</h2>\n        <ul style={{ textAlign: \"left\" }}>\n          <li>\n            <a target=\"_blank\" href=\"https://openbase.com/\">\n              Open Source Package Research Tool\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default HolyGrail;\n",{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":3,"column":17,"nodeType":"132","messageId":"133","endLine":3,"endColumn":25},{"ruleId":"130","severity":1,"message":"134","line":3,"column":27,"nodeType":"132","messageId":"133","endLine":3,"endColumn":36},{"ruleId":"130","severity":1,"message":"135","line":4,"column":25,"nodeType":"132","messageId":"133","endLine":4,"endColumn":29},{"ruleId":"130","severity":1,"message":"136","line":3,"column":8,"nodeType":"132","messageId":"133","endLine":3,"endColumn":11},{"ruleId":"130","severity":1,"message":"137","line":5,"column":8,"nodeType":"132","messageId":"133","endLine":5,"endColumn":18},{"ruleId":"130","severity":1,"message":"138","line":10,"column":7,"nodeType":"132","messageId":"133","endLine":10,"endColumn":12},{"ruleId":"130","severity":1,"message":"139","line":18,"column":9,"nodeType":"132","messageId":"133","endLine":18,"endColumn":14},{"ruleId":"140","severity":1,"message":"141","line":20,"column":13,"nodeType":"142","endLine":26,"endColumn":4},{"ruleId":"143","severity":1,"message":"144","line":30,"column":25,"nodeType":"145","messageId":"146","endLine":30,"endColumn":27},{"ruleId":"143","severity":1,"message":"144","line":53,"column":15,"nodeType":"145","messageId":"146","endLine":53,"endColumn":17},{"ruleId":"147","severity":1,"message":"148","line":64,"column":17,"nodeType":"149","endLine":64,"endColumn":70},{"ruleId":"140","severity":1,"message":"141","line":43,"column":13,"nodeType":"142","endLine":46,"endColumn":4},{"ruleId":"143","severity":1,"message":"144","line":57,"column":15,"nodeType":"145","messageId":"146","endLine":57,"endColumn":17},{"ruleId":"150","severity":1,"message":"151","line":62,"column":13,"nodeType":"149","messageId":"152","endLine":62,"endColumn":52,"fix":"153"},{"ruleId":"143","severity":1,"message":"144","line":27,"column":38,"nodeType":"145","messageId":"146","endLine":27,"endColumn":40},{"ruleId":"154","severity":1,"message":"155","line":49,"column":13,"nodeType":"149","endLine":49,"endColumn":25},{"ruleId":"143","severity":1,"message":"144","line":7,"column":30,"nodeType":"145","messageId":"146","endLine":7,"endColumn":32},{"ruleId":"143","severity":1,"message":"144","line":14,"column":30,"nodeType":"145","messageId":"146","endLine":14,"endColumn":32},{"ruleId":"143","severity":1,"message":"144","line":21,"column":30,"nodeType":"145","messageId":"146","endLine":21,"endColumn":32},{"ruleId":"143","severity":1,"message":"144","line":28,"column":30,"nodeType":"145","messageId":"146","endLine":28,"endColumn":32},{"ruleId":"143","severity":1,"message":"144","line":35,"column":30,"nodeType":"145","messageId":"146","endLine":35,"endColumn":32},{"ruleId":"143","severity":1,"message":"144","line":40,"column":27,"nodeType":"145","messageId":"146","endLine":40,"endColumn":29},{"ruleId":"130","severity":1,"message":"156","line":2,"column":8,"nodeType":"132","messageId":"133","endLine":2,"endColumn":24},{"ruleId":"130","severity":1,"message":"157","line":13,"column":9,"nodeType":"132","messageId":"133","endLine":13,"endColumn":27},{"ruleId":"158","severity":1,"message":"159","line":25,"column":3,"nodeType":"160","messageId":"161","endLine":32,"endColumn":4},{"ruleId":"143","severity":1,"message":"144","line":35,"column":15,"nodeType":"145","messageId":"146","endLine":35,"endColumn":17},{"ruleId":"130","severity":1,"message":"131","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":25},{"ruleId":"130","severity":1,"message":"134","line":1,"column":27,"nodeType":"132","messageId":"133","endLine":1,"endColumn":36},{"ruleId":"130","severity":1,"message":"131","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":25},{"ruleId":"130","severity":1,"message":"134","line":1,"column":27,"nodeType":"132","messageId":"133","endLine":1,"endColumn":36},{"ruleId":"150","severity":1,"message":"151","line":11,"column":13,"nodeType":"149","messageId":"152","endLine":11,"endColumn":74,"fix":"162"},{"ruleId":"150","severity":1,"message":"151","line":16,"column":13,"nodeType":"149","messageId":"152","endLine":19,"endColumn":14,"fix":"163"},{"ruleId":"150","severity":1,"message":"151","line":24,"column":13,"nodeType":"149","messageId":"152","endLine":24,"endColumn":56,"fix":"164"},{"ruleId":"150","severity":1,"message":"151","line":29,"column":13,"nodeType":"149","messageId":"152","endLine":32,"endColumn":14,"fix":"165"},{"ruleId":"150","severity":1,"message":"151","line":37,"column":13,"nodeType":"149","messageId":"152","endLine":37,"endColumn":69,"fix":"166"},{"ruleId":"150","severity":1,"message":"151","line":45,"column":13,"nodeType":"149","messageId":"152","endLine":45,"endColumn":61,"fix":"167"},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Link' is defined but never used.","'Box' is defined but never used.","'IconButton' is defined but never used.","'pages' is assigned a value but never used.","'theme' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"170","text":"171"},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'ResponsiveAppBar' is defined but never used.","'setLayoutPermanent' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock",{"range":"172","text":"171"},{"range":"173","text":"171"},{"range":"174","text":"171"},{"range":"175","text":"171"},{"range":"176","text":"171"},{"range":"177","text":"171"},"no-global-assign","no-unsafe-negation",[1538,1538]," rel=\"noreferrer\"",[407,407],[628,628],[781,781],[988,988],[1151,1151],[1391,1391]]