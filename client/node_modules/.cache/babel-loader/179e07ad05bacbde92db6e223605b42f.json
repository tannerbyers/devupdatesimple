{"ast":null,"code":"var _jsxFileName = \"/Users/tbyers/fun/devupdatesimple/client/src/components/TwitterFeed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getUserTweets = async () => {\n  const response = await fetch(\"/twitter_id\");\n  const body = await response.json();\n\n  if (response.status !== 200) {\n    throw Error(body.message);\n  }\n\n  return body;\n};\n\nconst TwitterFeed = () => {\n  _s();\n\n  const [tweets, setTweets] = useState([]);\n  console.log(tweets);\n  useEffect(async () => {\n    const tweetResponse = await getUserTweets();\n    setTweets(tweetResponse);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      overflow: \"auto\"\n    },\n    children: tweets && tweets.map(tweet => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: tweet.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 40\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TwitterFeed, \"tlPhWtKxaAnAviYMgoNvFaAwXFo=\");\n\n_c = TwitterFeed;\nexport default TwitterFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"TwitterFeed\");","map":{"version":3,"sources":["/Users/tbyers/fun/devupdatesimple/client/src/components/TwitterFeed.js"],"names":["React","useEffect","useState","getUserTweets","response","fetch","body","json","status","Error","message","TwitterFeed","tweets","setTweets","console","log","tweetResponse","overflow","map","tweet","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,aAAa,GAAG,YAAY;AAChC,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAD,CAA5B;AACA,QAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,MAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,UAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AACD;;AACD,SAAOJ,IAAP;AACD,CARD;;AAUA,MAAMK,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AAEAY,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAX,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMe,aAAa,GAAG,MAAMb,aAAa,EAAzC;AACAU,IAAAA,SAAS,CAACG,aAAD,CAAT;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAZ;AAAA,cACGL,MAAM,IAAIA,MAAM,CAACM,GAAP,CAAYC,KAAD,iBAAW;AAAA,gBAAMA,KAAK,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,YAAtB;AADb;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAdD;;GAAMT,W;;KAAAA,W;AAgBN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nconst getUserTweets = async () => {\n  const response = await fetch(\"/twitter_id\");\n  const body = await response.json();\n\n  if (response.status !== 200) {\n    throw Error(body.message);\n  }\n  return body;\n};\n\nconst TwitterFeed = () => {\n  const [tweets, setTweets] = useState([]);\n\n  console.log(tweets);\n  useEffect(async () => {\n    const tweetResponse = await getUserTweets();\n    setTweets(tweetResponse);\n  }, []);\n\n  return (\n    <div style={{ overflow: \"auto\" }}>\n      {tweets && tweets.map((tweet) => <div>{tweet.text}</div>)}\n    </div>\n  );\n};\n\nexport default TwitterFeed;\n"]},"metadata":{},"sourceType":"module"}