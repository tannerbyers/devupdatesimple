{"ast":null,"code":"var _jsxFileName = \"/Users/tbyers/fun/devupdatesimple/client/src/components/TwitterFeed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useTheme } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport { getMediaUrl, getUserTweets, getTwitterUserData } from \"../utils/apis.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TwitterFeed = _ref => {\n  _s();\n\n  let {\n    layout\n  } = _ref;\n  const [tweets, setTweets] = useState([]);\n  const [tweetMedia, setTweetMedia] = useState([]);\n  const [twitterUsersData, setTwitterUserData] = useState([]);\n  const theme = useTheme();\n  useEffect(async () => {\n    const tweetResponse = await getUserTweets();\n    const twitterUser = await getTwitterUserData();\n    setTwitterUserData(twitterUser.data);\n    setTweets(tweetResponse.data);\n    setTweetMedia(tweetResponse.includes.media);\n  }, []);\n\n  const getUserData = (tweet, field) => {\n    const specificUser = twitterUsersData.filter(user => user.id == tweet.author_id);\n    return specificUser[0][field];\n  };\n\n  const removeTwitterImageLink = text => {\n    // IDK why but twitter adds a custom url for the image in a tweet. I am using the attachments to get the link. I decided to just remove the link.\n    // I might want to just iterate over the string and if I find a t.co link, make it an image src or something idk.\n    const stringArray = text.split(\" \");\n    const result = stringArray.filter(word => word.indexOf(\"t.co\") === -1);\n    return result.join(\" \");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"80%\",\n      margin: \"10px auto\",\n      padding: \"10px\",\n      textAlign: \"left\"\n    },\n    children: layout == \"default\" ? tweets.map(tweet => /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        display: \"flex\",\n        margin: \"1%\",\n        padding: \"5%\",\n        border: \"solid rgb(239, 243, 244)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingRight: \"5%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: getUserData(tweet, \"profile_image_url\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            color: \"black\",\n            minWidth: \"20vw\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: getUserData(tweet, \"name\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"grey\",\n              paddingLeft: \"2%\"\n            },\n            children: [\"@\", getUserData(tweet, \"username\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: removeTwitterImageLink(tweet.text)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this), tweet.attachments && /*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          sx: {\n            width: 151,\n            borderRadius: 5,\n            margin: \"1rem\",\n            border: \".1rem solid lightgrey\"\n          },\n          src: getMediaUrl(tweetMedia, tweet.attachments)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)) : tweets.map(tweet => /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        display: \"flex\",\n        borderBottomColor: \"rgb(239, 243, 244)\",\n        border: \"solid rgb(239, 243, 244)\",\n        margin: \"1%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          paddingRight: \"2%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          sx: {\n            flex: \"1 0 auto\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"div\",\n            variant: \"p\",\n            children: tweet.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            color: \"text.secondary\",\n            component: \"div\",\n            children: tweet.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }, this), tweet.attachments && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: event => {\n          console.log(event);\n        },\n        children: /*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          sx: {\n            width: 151\n          },\n          src: getMediaUrl(tweetMedia, tweet.attachments)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TwitterFeed, \"SmjHjjHder/Nplt2LJ1thE/dE+s=\", false, function () {\n  return [useTheme];\n});\n\n_c = TwitterFeed;\nexport default TwitterFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"TwitterFeed\");","map":{"version":3,"sources":["/Users/tbyers/fun/devupdatesimple/client/src/components/TwitterFeed.js"],"names":["React","useEffect","useState","useTheme","Box","Card","CardContent","CardMedia","Typography","Button","getMediaUrl","getUserTweets","getTwitterUserData","TwitterFeed","layout","tweets","setTweets","tweetMedia","setTweetMedia","twitterUsersData","setTwitterUserData","theme","tweetResponse","twitterUser","data","includes","media","getUserData","tweet","field","specificUser","filter","user","id","author_id","removeTwitterImageLink","text","stringArray","split","result","word","indexOf","join","width","margin","padding","textAlign","map","display","border","paddingRight","color","minWidth","paddingLeft","attachments","borderRadius","borderBottomColor","flexDirection","flex","event","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useTheme } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport {\n  getMediaUrl,\n  getUserTweets,\n  getTwitterUserData,\n} from \"../utils/apis.js\";\n\nconst TwitterFeed = ({ layout }) => {\n  const [tweets, setTweets] = useState([]);\n  const [tweetMedia, setTweetMedia] = useState([]);\n  const [twitterUsersData, setTwitterUserData] = useState([]);\n  const theme = useTheme();\n\n  useEffect(async () => {\n    const tweetResponse = await getUserTweets();\n    const twitterUser = await getTwitterUserData();\n    setTwitterUserData(twitterUser.data);\n    setTweets(tweetResponse.data);\n    setTweetMedia(tweetResponse.includes.media);\n  }, []);\n\n  const getUserData = (tweet, field) => {\n    const specificUser = twitterUsersData.filter(\n      (user) => user.id == tweet.author_id\n    );\n    return specificUser[0][field];\n  };\n\n  const removeTwitterImageLink = (text) => {\n    // IDK why but twitter adds a custom url for the image in a tweet. I am using the attachments to get the link. I decided to just remove the link.\n    // I might want to just iterate over the string and if I find a t.co link, make it an image src or something idk.\n    const stringArray = text.split(\" \");\n    const result = stringArray.filter((word) => word.indexOf(\"t.co\") === -1);\n\n    return result.join(\" \");\n  };\n\n  return (\n    <div\n      style={{\n        width: \"80%\",\n        margin: \"10px auto\",\n        padding: \"10px\",\n        textAlign: \"left\",\n      }}\n    >\n      {layout == \"default\"\n        ? tweets.map((tweet) => (\n            <Card\n              sx={{\n                display: \"flex\",\n                margin: \"1%\",\n                padding: \"5%\",\n                border: \"solid rgb(239, 243, 244)\",\n              }}\n            >\n              <div style={{ paddingRight: \"5%\" }}>\n                <img src={getUserData(tweet, \"profile_image_url\")} />\n              </div>\n              <div>\n                <div\n                  style={{\n                    display: \"flex\",\n                    color: \"black\",\n                    minWidth: \"20vw\",\n                  }}\n                >\n                  <b>{getUserData(tweet, \"name\")}</b>\n                  <p style={{ color: \"grey\", paddingLeft: \"2%\" }}>\n                    @{getUserData(tweet, \"username\")}\n                  </p>\n                </div>\n                <p>{removeTwitterImageLink(tweet.text)}</p>\n                {tweet.attachments && (\n                  <CardMedia\n                    component=\"img\"\n                    sx={{\n                      width: 151,\n                      borderRadius: 5,\n                      margin: \"1rem\",\n                      border: \".1rem solid lightgrey\",\n                    }}\n                    src={getMediaUrl(tweetMedia, tweet.attachments)}\n                  />\n                )}\n              </div>\n            </Card>\n          ))\n        : tweets.map((tweet) => (\n            <Card\n              sx={{\n                display: \"flex\",\n                borderBottomColor: \"rgb(239, 243, 244)\",\n                border: \"solid rgb(239, 243, 244)\",\n                margin: \"1%\",\n              }}\n            >\n              <Box\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  paddingRight: \"2%\",\n                }}\n              >\n                <CardContent sx={{ flex: \"1 0 auto\" }}>\n                  <Typography component=\"div\" variant=\"p\">\n                    {tweet.text}\n                  </Typography>\n                  <Typography\n                    variant=\"subtitle1\"\n                    color=\"text.secondary\"\n                    component=\"div\"\n                  >\n                    {tweet.id}\n                  </Typography>\n                </CardContent>\n              </Box>\n              {tweet.attachments && (\n                <Button\n                  onClick={(event) => {\n                    console.log(event);\n                  }}\n                >\n                  <CardMedia\n                    component=\"img\"\n                    sx={{ width: 151 }}\n                    src={getMediaUrl(tweetMedia, tweet.attachments)}\n                  />\n                </Button>\n              )}\n            </Card>\n          ))}\n    </div>\n  );\n};\n\nexport default TwitterFeed;\n"]},"metadata":{},"sourceType":"module"}