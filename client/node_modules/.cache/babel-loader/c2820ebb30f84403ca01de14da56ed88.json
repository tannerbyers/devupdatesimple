{"ast":null,"code":"var _jsxFileName = \"/Users/tbyers/fun/devupdatesimple/client/src/components/TwitterFeed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useTheme } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport SkipPreviousIcon from \"@mui/icons-material/SkipPrevious\";\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\nimport SkipNextIcon from \"@mui/icons-material/SkipNext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getUserTweets = async () => {\n  const response = await fetch(\"/twitter_id\");\n  const body = await response.json();\n\n  if (response.status !== 200) {\n    throw Error(body.message);\n  }\n\n  return body;\n};\n\nconst getMediaUrl = (tweetMediaGiven, tweet) => {\n  for (let i = 0; i < tweetMediaGiven.length; i++) {\n    var _tweet$attachments;\n\n    if (tweetMediaGiven.media_key == (tweet === null || tweet === void 0 ? void 0 : (_tweet$attachments = tweet.attachments) === null || _tweet$attachments === void 0 ? void 0 : _tweet$attachments.media_keys[0])) {\n      console.log(\"image found\");\n      return tweetMediaGiven.preview_image_url;\n    }\n  } //   tweetMediaGiven\n  //     .filter((media) => media.key === tweet.attachments.mediaKeys[0])\n  //     .map((obj) => obj.preview_image_url);\n\n};\n\nconst TwitterFeed = () => {\n  _s();\n\n  const [tweets, setTweets] = useState([]);\n  const [tweetMedia, setTweetMedia] = useState([]);\n  const theme = useTheme();\n  useEffect(async () => {\n    const tweetResponse = await getUserTweets();\n    console.log(tweetResponse.includes.media);\n    setTweets(tweetResponse.data);\n    setTweetMedia(tweetResponse.includes.media);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: tweets && tweets.map(tweet => /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        display: \"flex\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          sx: {\n            flex: \"1 0 auto\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n            component: \"img\",\n            sx: {\n              width: 151\n            },\n            image: getMediaUrl(tweetMedia, tweet),\n            alt: \"Live from space album cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"div\",\n            variant: \"p\",\n            children: tweet.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            color: \"text.secondary\",\n            component: \"div\",\n            children: tweet.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this))\n  }, void 0, false);\n};\n\n_s(TwitterFeed, \"7PMIe/YECSbuydjbZcpNz4TFGpE=\", false, function () {\n  return [useTheme];\n});\n\n_c = TwitterFeed;\nexport default TwitterFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"TwitterFeed\");","map":{"version":3,"sources":["/Users/tbyers/fun/devupdatesimple/client/src/components/TwitterFeed.js"],"names":["React","useEffect","useState","useTheme","Box","Card","CardContent","CardMedia","IconButton","Typography","SkipPreviousIcon","PlayArrowIcon","SkipNextIcon","getUserTweets","response","fetch","body","json","status","Error","message","getMediaUrl","tweetMediaGiven","tweet","i","length","media_key","attachments","media_keys","console","log","preview_image_url","TwitterFeed","tweets","setTweets","tweetMedia","setTweetMedia","theme","tweetResponse","includes","media","data","map","display","flexDirection","flex","width","text","id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useTheme } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Typography from \"@mui/material/Typography\";\nimport SkipPreviousIcon from \"@mui/icons-material/SkipPrevious\";\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\nimport SkipNextIcon from \"@mui/icons-material/SkipNext\";\n\nconst getUserTweets = async () => {\n  const response = await fetch(\"/twitter_id\");\n  const body = await response.json();\n\n  if (response.status !== 200) {\n    throw Error(body.message);\n  }\n  return body;\n};\n\nconst getMediaUrl = (tweetMediaGiven, tweet) => {\n  for (let i = 0; i < tweetMediaGiven.length; i++) {\n    if (tweetMediaGiven.media_key == tweet?.attachments?.media_keys[0]) {\n      console.log(\"image found\");\n      return tweetMediaGiven.preview_image_url;\n    }\n  }\n\n  //   tweetMediaGiven\n  //     .filter((media) => media.key === tweet.attachments.mediaKeys[0])\n  //     .map((obj) => obj.preview_image_url);\n};\n\nconst TwitterFeed = () => {\n  const [tweets, setTweets] = useState([]);\n  const [tweetMedia, setTweetMedia] = useState([]);\n  const theme = useTheme();\n\n  useEffect(async () => {\n    const tweetResponse = await getUserTweets();\n    console.log(tweetResponse.includes.media);\n\n    setTweets(tweetResponse.data);\n    setTweetMedia(tweetResponse.includes.media);\n  }, []);\n\n  return (\n    <>\n      {tweets &&\n        tweets.map((tweet) => (\n          <Card sx={{ display: \"flex\" }}>\n            <Box sx={{ display: \"flex\", flexDirection: \"column\" }}>\n              <CardContent sx={{ flex: \"1 0 auto\" }}>\n                <CardMedia\n                  component=\"img\"\n                  sx={{ width: 151 }}\n                  image={getMediaUrl(tweetMedia, tweet)}\n                  alt=\"Live from space album cover\"\n                />\n\n                <Typography component=\"div\" variant=\"p\">\n                  {tweet.text}\n                </Typography>\n                <Typography\n                  variant=\"subtitle1\"\n                  color=\"text.secondary\"\n                  component=\"div\"\n                >\n                  {tweet.id}\n                </Typography>\n              </CardContent>\n            </Box>\n          </Card>\n        ))}\n    </>\n  );\n};\n\nexport default TwitterFeed;\n"]},"metadata":{},"sourceType":"module"}