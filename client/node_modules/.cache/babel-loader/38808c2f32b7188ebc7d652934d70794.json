{"ast":null,"code":"var _jsxFileName = \"/Users/tbyers/fun/devupdatesimple/client/src/components/TwitterFeed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useTheme } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getUserTweets = async () => {\n  const response = await fetch(\"/api/recent_twitter_posts\");\n  const body = await response.json();\n\n  if (response.status !== 200) {\n    throw Error(body.message);\n  }\n\n  return body;\n};\n\nconst getMediaUrl = (tweetMediaGiven, attachments) => {\n  for (let i = 0; i < tweetMediaGiven.length; i++) {\n    if (tweetMediaGiven[i].media_key == attachments.media_keys[0]) {\n      console.log(\"image found\");\n      console.log(tweetMediaGiven[i]);\n      console.log(tweetMediaGiven[i].preview_image_url);\n\n      if (tweetMediaGiven[i].preview_image_url) {\n        return tweetMediaGiven[i].preview_image_url;\n      }\n\n      return tweetMediaGiven[i].url;\n    }\n  }\n};\n\nconst TwitterFeed = () => {\n  _s();\n\n  const [tweets, setTweets] = useState([]);\n  const [tweetMedia, setTweetMedia] = useState([]);\n  useEffect(() => {\n    async function getTweets() {\n      return await getUserTweets();\n    }\n\n    const tweets = getTweets();\n    setTweets(tweets.data);\n    setTweetMedia(tweets.includes.media);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: tweets && tweets.map(tweet => /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        display: \"flex\",\n        color: \"#1DA1F2\",\n        borderBottomColor: \"rgb(239, 243, 244)\",\n        border: \"solid rgb(239, 243, 244)\",\n        margin: \"1%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          paddingRight: \"2%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          sx: {\n            flex: \"1 0 auto\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"div\",\n            variant: \"p\",\n            children: tweet.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            color: \"text.secondary\",\n            component: \"div\",\n            children: tweet.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), tweet.attachments && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: event => {\n          console.log(event);\n        },\n        children: /*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          sx: {\n            width: 151\n          },\n          src: getMediaUrl(tweetMedia, tweet.attachments)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this))\n  }, void 0, false);\n};\n\n_s(TwitterFeed, \"ylW1GR3d+Bbv5cK6jaiY6RJ9w8w=\");\n\n_c = TwitterFeed;\nexport default TwitterFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"TwitterFeed\");","map":{"version":3,"sources":["/Users/tbyers/fun/devupdatesimple/client/src/components/TwitterFeed.js"],"names":["React","useEffect","useState","useTheme","Box","Card","CardContent","CardMedia","Typography","Button","getUserTweets","response","fetch","body","json","status","Error","message","getMediaUrl","tweetMediaGiven","attachments","i","length","media_key","media_keys","console","log","preview_image_url","url","TwitterFeed","tweets","setTweets","tweetMedia","setTweetMedia","getTweets","data","includes","media","map","tweet","display","color","borderBottomColor","border","margin","flexDirection","paddingRight","flex","text","id","event","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useTheme } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\n\nconst getUserTweets = async () => {\n  const response = await fetch(\"/api/recent_twitter_posts\");\n  const body = await response.json();\n\n  if (response.status !== 200) {\n    throw Error(body.message);\n  }\n  return body;\n};\n\nconst getMediaUrl = (tweetMediaGiven, attachments) => {\n  for (let i = 0; i < tweetMediaGiven.length; i++) {\n    if (tweetMediaGiven[i].media_key == attachments.media_keys[0]) {\n      console.log(\"image found\");\n      console.log(tweetMediaGiven[i]);\n      console.log(tweetMediaGiven[i].preview_image_url);\n\n      if (tweetMediaGiven[i].preview_image_url) {\n        return tweetMediaGiven[i].preview_image_url;\n      }\n      return tweetMediaGiven[i].url;\n    }\n  }\n};\n\nconst TwitterFeed = () => {\n  const [tweets, setTweets] = useState([]);\n  const [tweetMedia, setTweetMedia] = useState([]);\n\n  useEffect(() => {\n    async function getTweets() {\n      return await getUserTweets();\n    }\n    const tweets = getTweets();\n    setTweets(tweets.data);\n    setTweetMedia(tweets.includes.media);\n  }, []);\n\n  return (\n    <>\n      {tweets &&\n        tweets.map((tweet) => (\n          <Card\n            sx={{\n              display: \"flex\",\n              color: \"#1DA1F2\",\n              borderBottomColor: \"rgb(239, 243, 244)\",\n              border: \"solid rgb(239, 243, 244)\",\n              margin: \"1%\",\n            }}\n          >\n            <Box\n              sx={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                paddingRight: \"2%\",\n              }}\n            >\n              <CardContent sx={{ flex: \"1 0 auto\" }}>\n                <Typography component=\"div\" variant=\"p\">\n                  {tweet.text}\n                </Typography>\n                <Typography\n                  variant=\"subtitle1\"\n                  color=\"text.secondary\"\n                  component=\"div\"\n                >\n                  {tweet.id}\n                </Typography>\n              </CardContent>\n            </Box>\n            {tweet.attachments && (\n              <Button\n                onClick={(event) => {\n                  console.log(event);\n                }}\n              >\n                <CardMedia\n                  component=\"img\"\n                  sx={{ width: 151 }}\n                  src={getMediaUrl(tweetMedia, tweet.attachments)}\n                />\n              </Button>\n            )}\n          </Card>\n        ))}\n    </>\n  );\n};\n\nexport default TwitterFeed;\n"]},"metadata":{},"sourceType":"module"}