{"ast":null,"code":"import axios from 'axios';\nimport { BASE_API_URL } from './constants.js';\n\nconst getStory = async id => {\n  try {\n    const story = await axios.get(`${BASE_API_URL}/item/${id}.json`);\n    return story;\n  } catch (error) {\n    console.log('Error while getting a story.');\n  }\n};\n\nexport const getStories = async type => {\n  try {\n    const {\n      data: storyIds\n    } = await axios.get(`${BASE_API_URL}/${type}stories.json`);\n    const stories = await Promise.all(storyIds.slice(0, 30).map(getStory));\n    return stories;\n  } catch (error) {\n    console.log('Error while getting list of stories.');\n  }\n};\nexport const getMediaUrl = (tweetMediaGiven, attachments) => {\n  for (let i = 0; i < tweetMediaGiven.length; i++) {\n    if (tweetMediaGiven[i].media_key == attachments.media_keys[0]) {\n      if (tweetMediaGiven[i].preview_image_url) {\n        return tweetMediaGiven[i].preview_image_url;\n      }\n\n      return tweetMediaGiven[i].url;\n    }\n  }\n};\nexport const getUserTweets = async () => {\n  const response = await fetch(\"/api/recent_twitter_posts\");\n  const body = await response.json();\n\n  if (response.status !== 200) {\n    throw Error(body.message);\n  }\n\n  return body;\n};\nexport const getTwitterUserData = async () => {\n  const response = await fetch(\"/api/twitter_user\");\n  const body = await response.json();\n\n  if (response.status !== 200) {\n    throw Error(body.message);\n  }\n\n  return body;\n};","map":{"version":3,"sources":["/Users/tbyers/fun/devupdatesimple/client/src/utils/apis.js"],"names":["axios","BASE_API_URL","getStory","id","story","get","error","console","log","getStories","type","data","storyIds","stories","Promise","all","slice","map","getMediaUrl","tweetMediaGiven","attachments","i","length","media_key","media_keys","preview_image_url","url","getUserTweets","response","fetch","body","json","status","Error","message","getTwitterUserData"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,gBAA7B;;AAEA,MAAMC,QAAQ,GAAG,MAAOC,EAAP,IAAc;AAC7B,MAAI;AACF,UAAMC,KAAK,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAW,GAAEJ,YAAa,SAAQE,EAAG,OAArC,CAApB;AACA,WAAOC,KAAP;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACD;AACF,CAPD;;AASA,OAAO,MAAMC,UAAU,GAAG,MAAOC,IAAP,IAAgB;AACxC,MAAI;AACF,UAAM;AAAEC,MAAAA,IAAI,EAAEC;AAAR,QAAqB,MAAMZ,KAAK,CAACK,GAAN,CAC9B,GAAEJ,YAAa,IAAGS,IAAK,cADO,CAAjC;AAGA,UAAMG,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,KAAT,CAAe,CAAf,EAAkB,EAAlB,EAAsBC,GAAtB,CAA0Bf,QAA1B,CAAZ,CAAtB;AACA,WAAOW,OAAP;AACD,GAND,CAME,OAAOP,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACD;AACF,CAVM;AAYP,OAAO,MAAMU,WAAW,GAAG,CAACC,eAAD,EAAkBC,WAAlB,KAAkC;AAC3D,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,eAAe,CAACG,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;AAC/C,QAAIF,eAAe,CAACE,CAAD,CAAf,CAAmBE,SAAnB,IAAgCH,WAAW,CAACI,UAAZ,CAAuB,CAAvB,CAApC,EAA+D;AAE7D,UAAIL,eAAe,CAACE,CAAD,CAAf,CAAmBI,iBAAvB,EAA0C;AACxC,eAAON,eAAe,CAACE,CAAD,CAAf,CAAmBI,iBAA1B;AACD;;AACD,aAAON,eAAe,CAACE,CAAD,CAAf,CAAmBK,GAA1B;AACD;AACF;AACF,CAVM;AAaP,OAAO,MAAMC,aAAa,GAAG,YAAY;AACvC,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2BAAD,CAA5B;AACA,QAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,MAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,UAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AACD;;AACD,SAAOJ,IAAP;AACD,CARM;AAWP,OAAO,MAAMK,kBAAkB,GAAG,YAAY;AAC5C,QAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,mBAAD,CAA5B;AACA,QAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,MAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,UAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AACD;;AACD,SAAOJ,IAAP;AACD,CARM","sourcesContent":["import axios from 'axios';\nimport { BASE_API_URL } from './constants.js';\n\nconst getStory = async (id) => {\n  try {\n    const story = await axios.get(`${BASE_API_URL}/item/${id}.json`);\n    return story;\n  } catch (error) {\n    console.log('Error while getting a story.');\n  }\n};\n\nexport const getStories = async (type) => {\n  try {\n    const { data: storyIds } = await axios.get(\n      `${BASE_API_URL}/${type}stories.json`\n    );\n    const stories = await Promise.all(storyIds.slice(0, 30).map(getStory));\n    return stories;\n  } catch (error) {\n    console.log('Error while getting list of stories.');\n  }\n};\n\nexport const getMediaUrl = (tweetMediaGiven, attachments) => {\n  for (let i = 0; i < tweetMediaGiven.length; i++) {\n    if (tweetMediaGiven[i].media_key == attachments.media_keys[0]) {\n\n      if (tweetMediaGiven[i].preview_image_url) {\n        return tweetMediaGiven[i].preview_image_url;\n      }\n      return tweetMediaGiven[i].url;\n    }\n  }\n};\n\n\nexport const getUserTweets = async () => {\n  const response = await fetch(\"/api/recent_twitter_posts\");\n  const body = await response.json();\n\n  if (response.status !== 200) {\n    throw Error(body.message);\n  }\n  return body;\n};\n\n\nexport const getTwitterUserData = async () => {\n  const response = await fetch(\"/api/twitter_user\");\n  const body = await response.json();\n\n  if (response.status !== 200) {\n    throw Error(body.message);\n  }\n  return body;\n};\n"]},"metadata":{},"sourceType":"module"}