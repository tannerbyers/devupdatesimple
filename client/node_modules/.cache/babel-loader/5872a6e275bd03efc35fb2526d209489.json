{"ast":null,"code":"var _jsxFileName = \"/Users/tbyers/fun/devupdatesimple/client/src/components/TwitterFeed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useTheme } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport { getMediaUrl, getUserTweets, getTwitterUserData } from \"../utils/apis.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TwitterFeed = _ref => {\n  _s();\n\n  let {\n    layout\n  } = _ref;\n  const [tweets, setTweets] = useState([]);\n  const [tweetMedia, setTweetMedia] = useState([]);\n  const [twitterUsersData, setTwitterUserData] = useState([]);\n  const theme = useTheme();\n  useEffect(async () => {\n    const tweetResponse = await getUserTweets();\n    const twitterUser = await getTwitterUserData();\n    setTwitterUserData(twitterUser.data);\n    setTweets(tweetResponse.data);\n    setTweetMedia(tweetResponse.includes.media);\n  }, []);\n\n  const getUserData = (tweet, field) => {\n    const specificUser = twitterUsersData.filter(user => user.id == tweet.author_id);\n    console.log(specificUser[0][field]);\n    return specificUser[0][field];\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"80%\",\n      margin: \"10px auto\",\n      padding: \"10px\",\n      textAlign: \"left\"\n    },\n    children: layout == \"default\" ? tweets.map(tweet => /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        display: \"flex\",\n        color: \"#1DA1F2\",\n        margin: \"1%\",\n        padding: \"5%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"5%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: getUserData(tweet, profile_image_url)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Twitter Content\", tweet.id, tweet.text, tweet.attachments && /*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          sx: {\n            width: 151\n          },\n          src: getMediaUrl(tweetMedia, tweet.attachments)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)) : tweets.map(tweet => /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        display: \"flex\",\n        color: \"#1DA1F2\",\n        borderBottomColor: \"rgb(239, 243, 244)\",\n        border: \"solid rgb(239, 243, 244)\",\n        margin: \"1%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          paddingRight: \"2%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          sx: {\n            flex: \"1 0 auto\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            component: \"div\",\n            variant: \"p\",\n            children: tweet.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            color: \"text.secondary\",\n            component: \"div\",\n            children: tweet.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }, this), tweet.attachments && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: event => {\n          console.log(event);\n        },\n        children: /*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          sx: {\n            width: 151\n          },\n          src: getMediaUrl(tweetMedia, tweet.attachments)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TwitterFeed, \"SmjHjjHder/Nplt2LJ1thE/dE+s=\", false, function () {\n  return [useTheme];\n});\n\n_c = TwitterFeed;\nexport default TwitterFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"TwitterFeed\");","map":{"version":3,"sources":["/Users/tbyers/fun/devupdatesimple/client/src/components/TwitterFeed.js"],"names":["React","useEffect","useState","useTheme","Box","Card","CardContent","CardMedia","Typography","Button","getMediaUrl","getUserTweets","getTwitterUserData","TwitterFeed","layout","tweets","setTweets","tweetMedia","setTweetMedia","twitterUsersData","setTwitterUserData","theme","tweetResponse","twitterUser","data","includes","media","getUserData","tweet","field","specificUser","filter","user","id","author_id","console","log","width","margin","padding","textAlign","map","display","color","profile_image_url","text","attachments","borderBottomColor","border","flexDirection","paddingRight","flex","event"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useTheme } from \"@mui/material/styles\";\nimport Box from \"@mui/material/Box\";\nimport Card from \"@mui/material/Card\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport {\n  getMediaUrl,\n  getUserTweets,\n  getTwitterUserData,\n} from \"../utils/apis.js\";\n\nconst TwitterFeed = ({ layout }) => {\n  const [tweets, setTweets] = useState([]);\n  const [tweetMedia, setTweetMedia] = useState([]);\n  const [twitterUsersData, setTwitterUserData] = useState([]);\n  const theme = useTheme();\n\n  useEffect(async () => {\n    const tweetResponse = await getUserTweets();\n    const twitterUser = await getTwitterUserData();\n    setTwitterUserData(twitterUser.data);\n    setTweets(tweetResponse.data);\n    setTweetMedia(tweetResponse.includes.media);\n  }, []);\n\n  const getUserData = (tweet, field) => {\n    const specificUser = twitterUsersData.filter(\n      (user) => user.id == tweet.author_id\n    );\n    console.log(specificUser[0][field]);\n    return specificUser[0][field];\n  };\n\n  return (\n    <div\n      style={{\n        width: \"80%\",\n        margin: \"10px auto\",\n        padding: \"10px\",\n        textAlign: \"left\",\n      }}\n    >\n      {layout == \"default\"\n        ? tweets.map((tweet) => (\n            <Card\n              sx={{\n                display: \"flex\",\n                color: \"#1DA1F2\",\n                margin: \"1%\",\n                padding: \"5%\",\n              }}\n            >\n              <div style={{ padding: \"5%\"}}>\n                <img src={getUserData(tweet, profile_image_url)} />\n              </div>\n              <div>\n                Twitter Content\n                {tweet.id}\n                {tweet.text}\n                {tweet.attachments && (\n                  <CardMedia\n                    component=\"img\"\n                    sx={{ width: 151 }}\n                    src={getMediaUrl(tweetMedia, tweet.attachments)}\n                  />\n                )}\n              </div>\n            </Card>\n          ))\n        : tweets.map((tweet) => (\n            <Card\n              sx={{\n                display: \"flex\",\n                color: \"#1DA1F2\",\n                borderBottomColor: \"rgb(239, 243, 244)\",\n                border: \"solid rgb(239, 243, 244)\",\n                margin: \"1%\",\n              }}\n            >\n              <Box\n                sx={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  paddingRight: \"2%\",\n                }}\n              >\n                <CardContent sx={{ flex: \"1 0 auto\" }}>\n                  <Typography component=\"div\" variant=\"p\">\n                    {tweet.text}\n                  </Typography>\n                  <Typography\n                    variant=\"subtitle1\"\n                    color=\"text.secondary\"\n                    component=\"div\"\n                  >\n                    {tweet.id}\n                  </Typography>\n                </CardContent>\n              </Box>\n              {tweet.attachments && (\n                <Button\n                  onClick={(event) => {\n                    console.log(event);\n                  }}\n                >\n                  <CardMedia\n                    component=\"img\"\n                    sx={{ width: 151 }}\n                    src={getMediaUrl(tweetMedia, tweet.attachments)}\n                  />\n                </Button>\n              )}\n            </Card>\n          ))}\n    </div>\n  );\n};\n\nexport default TwitterFeed;\n"]},"metadata":{},"sourceType":"module"}