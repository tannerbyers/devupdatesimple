function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React, { forwardRef } from 'react';
import PropTypes from 'prop-types';
var Quantcast = /*#__PURE__*/forwardRef(function Quantcast(_ref, ref) {
  var _ref$color = _ref.color,
      color = _ref$color === void 0 ? 'currentColor' : _ref$color,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? 24 : _ref$size,
      _ref$title = _ref.title,
      title = _ref$title === void 0 ? 'quantcast' : _ref$title,
      others = _objectWithoutPropertiesLoose(_ref, ["color", "size", "title"]);

  return /*#__PURE__*/React.createElement("svg", _extends({
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    fill: color,
    viewBox: "0 0 24 24",
    ref: ref
  }, others), /*#__PURE__*/React.createElement("title", null, title), /*#__PURE__*/React.createElement("path", {
    d: "M5.791 11.1c0-3.574 1.92-7.18 6.21-7.18 4.288 0 6.208 3.606 6.208 7.18 0 1.55-.362 3.106-1.121 4.371l-4.906-.005 1.507 2.601A6.607 6.607 0 0 1 12 18.28c-4.29 0-6.209-3.606-6.209-7.18m9.96 10.53L17.124 24h4.911l-2.607-4.496c2.36-2.14 3.57-5.283 3.57-8.404C22.998 5.584 19.221 0 12 0 4.78 0 1.002 5.584 1.002 11.1c0 5.515 3.778 11.1 10.998 11.1 1.377 0 2.627-.205 3.75-.572Z"
  }));
});
Quantcast.propTypes = {
  /**
   * Hex color or color name
   */
  color: PropTypes.string,

  /**
   * The size of the Icon.
   */
  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),

  /**
   * The title provides an accessible short text description to the SVG
   */
  title: PropTypes.string
};
export default Quantcast;